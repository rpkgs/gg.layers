% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_barchart.R
\name{layer_barchart}
\alias{layer_barchart}
\alias{geom_barchart}
\title{layer_barchart}
\usage{
layer_barchart(
  mapping = NULL,
  data = NULL,
  brks,
  cols,
  x = 0,
  y = 0,
  width = unit(0.5, "npc"),
  height = unit(0.5, "npc"),
  just = c(0, 0),
  fontsize = 12,
  theme = NULL,
  ...
)

geom_barchart(
  mapping = NULL,
  data = NULL,
  brks,
  cols,
  x = 0,
  y = 0,
  width = unit(0.5, "npc"),
  height = unit(0.5, "npc"),
  just = c(0, 0),
  fontsize = 12,
  theme = NULL,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{x}{A numeric vector or unit object specifying x-location.}

\item{y}{A numeric vector or unit object specifying y-location.}

\item{width}{Bar width. By default, set to 90\% of the \code{\link[ggplot2:resolution]{resolution()}} of the
data.}

\item{height}{A numeric vector or unit object specifying height.}

\item{just}{Adjustment for column placement. Set to \code{0.5} by default, meaning
that columns will be centered about axis breaks. Set to \code{0} or \code{1} to place
columns to the left/right of axis breaks. Note that this argument may have
unintended behaviour when used with alternative positions, e.g.
\code{position_dodge()}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}'s \code{params} argument. These
arguments broadly fall into one of 4 categories below. Notably, further
arguments to the \code{position} argument, or aesthetics that are required
can \emph{not} be passed through \code{...}. Unknown arguments that are not part
of the 4 categories below are ignored.
\itemize{
\item Static aesthetics that are not mapped to a scale, but are at a fixed
value and apply to the layer as a whole. For example, \code{colour = "red"}
or \code{linewidth = 3}. The geom's documentation has an \strong{Aesthetics}
section that lists the available options. The 'required' aesthetics
cannot be passed on to the \code{params}. Please note that while passing
unmapped aesthetics as vectors is technically possible, the order and
required length is not guaranteed to be parallel to the input data.
\item When constructing a layer using
a \verb{stat_*()} function, the \code{...} argument can be used to pass on
parameters to the \code{geom} part of the layer. An example of this is
\code{stat_density(geom = "area", outline.type = "both")}. The geom's
documentation lists which parameters it can accept.
\item Inversely, when constructing a layer using a
\verb{geom_*()} function, the \code{...} argument can be used to pass on parameters
to the \code{stat} part of the layer. An example of this is
\code{geom_area(stat = "density", adjust = 0.5)}. The stat's documentation
lists which parameters it can accept.
\item The \code{key_glyph} argument of \code{\link[ggplot2:layer]{layer()}} may also be passed on through
\code{...}. This can be one of the functions described as
\link[ggplot2:draw_key]{key glyphs}, to change the display of the layer in the legend.
}}
}
\description{
layer_barchart
}
\examples{
library(gg.layers)
library(ggplot2)
library(rcolors)

data("d_trendPerc")
d_mask <- mutate(d_trendPerc, mask = perc <= 0.99) # \%>\% as.data.frame()

brks = seq(0.9, 1, 0.025)
nbrk = length(brks) - 1
cols <- get_color(rcolors$amwg256, nbrk)

# the part of not significant
ggplot(data = d_mask, aes(x, y)) +
  geom_raster(aes(fill = perc)) +
  layer_barchart(aes(z = perc), 
    width = unit(0.3, "npc"), 
    height = unit(0.3, "npc"), 
    brks = brks, cols = cols)
}
