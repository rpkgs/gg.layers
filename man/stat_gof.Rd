% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_gof.R, R/stat_reg.R
\name{stat_gof}
\alias{stat_gof}
\alias{geom_gof}
\alias{stat_reg}
\title{stat_gof}
\usage{
stat_gof(
  mapping = NULL,
  data = NULL,
  geom = GeomRichTextNpc,
  position = "identity",
  na.rm = FALSE,
  show.legend = NA,
  show.bias = TRUE,
  label.format = fmt_gof,
  x = 0.05,
  y = 0.95,
  inherit.aes = TRUE,
  ...
)

geom_gof(
  mapping = NULL,
  data = NULL,
  stat = StatGOF,
  position = "identity",
  ...,
  show.bias = TRUE,
  label.format = fmt_gof,
  x = 0,
  y = 1,
  hjust = 0,
  vjust = 1,
  size = 5,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

stat_reg(
  mapping = NULL,
  data = NULL,
  formula = y ~ x,
  digits = 2,
  units = "",
  format = paste0("Slope = {str_num(slope, digits)}{unit}",
    ", p-value = {str_num(pvalue, digits)}"),
  fun_slope = NULL,
  x = 0,
  y = 1,
  hjust = 0,
  vjust = 1,
  mar = 0.03,
  height.factor = 1.2,
  family = "Times",
  color = NULL,
  position = "dodge",
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{position}{"dodge" or "identity"}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{show.bias}{whether to show bias}

\item{label.format}{format string for label, default \code{fmt_gof}}

\item{x}{A single number specifying size relative to parent element.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{hjust}{Horizontal justification (in \eqn{[0, 1]})}

\item{vjust}{Vertical justification (in \eqn{[0, 1]})}

\item{size}{text size in pts.}

\item{formula}{an object of class \code{"\link[stats]{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{digits}{the number of \emph{significant} digits to be
    passed to \code{\link{format}(\link[stats]{coef}(x), .)} when
    \code{\link{print}()}ing.}

\item{family}{Font family}
}
\value{
No return. This function is used to calculate data for gglot2 \verb{geom_*},
just like \code{\link[ggplot2:geom_smooth]{ggplot2::stat_smooth()}}.
}
\description{
stat_gof
}
\details{
\itemize{
\item \code{b}: the object returned by \code{\link[broom:reexports]{broom::tidy()}}
\item \code{s}: the object returned by \code{\link[broom:reexports]{broom::glance()}}
\itemize{
\item "\emph{R}^2 = {str_num(s$r.squared, digits)}"
}
\item \code{slope}:
\item \code{pvalue}:
\item \code{pcode}: significant code, e.g., \verb{**}, \code{*}, \code{-}
}
}
\examples{
library(ggplot2)
library(data.table)

dat <- data.table(mtcars)
dat$cyl <- as.factor(dat$cyl)
table(dat$cyl)

ggplot(dat, aes(wt, mpg, color = cyl)) +
    geom_point() +
    stat_reg(data = dat[cyl != 4], y = 1, mar = 0, position = "none") +
    facet_wrap(~cyl)

ggplot(dat, aes(wt, mpg, color = cyl)) +
  geom_point() +
  stat_reg(data = dat[cyl != 4], y = 1,
               position = "dodge",
               height.factor = 1.2,
               unit = "gC m^-2 d^-1")

ggplot(dat, aes(wt, mpg, color = cyl)) +
  geom_point() +
  stat_reg(data = dat[cyl != 4], y = 1,
               position = "none",
               height.factor = 1.2,
               unit = "gC m^-2 d^-1") +
  facet_wrap(~cyl)


ggplot(dat, aes(wt, mpg, color = cyl)) +
    geom_point() +
    stat_gof(x = 0, y = 1) +
    # stat_reg(data = subset(dat, cyl == 4), y = 1, color = "red") +
    # stat_reg(data = subset(dat, cyl == 6), y = 0.8) +
    facet_wrap(~cyl)
}
